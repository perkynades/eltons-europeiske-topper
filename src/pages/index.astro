---
import { getCollection } from "astro:content";
import LinkCard from "../components/LinkCard.astro";
import Layout from "../layouts/Layout.astro";
import VerticalBar from "../components/VerticalBar.astro";
import StatusBar from "../components/StatusBar.astro";
const topper = await getCollection("topper");

const topperSortertPaaRang = [...topper].sort(
	(a, b) => a.data.rang - b.data.rang,
);

const ikkeGjennomfoerteTopper = [...topperSortertPaaRang].filter(
	(topp) => topp.data.status === "IKKE_GJENNOMFØRT",
);

const gjennomfoerteTopper = [...topperSortertPaaRang].filter(
	(topp) => topp.data.status === "GJENNOMFØRT",
);

import "../styles/global.css";

// Welcome to Astro! Wondering what to do next? Check out the Astro documentation at https://docs.astro.build
// Don't want to use any of this? Delete everything in this file, the `assets`, `components`, and `layouts` directories, and start fresh.
---

<Layout>
	<h1>Eltons europeiske topper</h1>
	<div
		style={{
			display: "flex",
			flexDirection: "column",
			gap: "2rem",
		}}
	>
		<div style={{ display: "flex", flexDirection: "row" }}>
			<StatusBar label="Bestilt" />
			<div>
				{
					ikkeGjennomfoerteTopper.map((topp, index) => (
						<>
							{index !== 0 && <VerticalBar />}
							<LinkCard
								href={`/topper/${topp.slug}`}
								tittel={`${topp.data.rang}. ${topp.data.høyestePunkt}, ${topp.data.land}, ${topp.data.moh} moh`}
								landEmoji={topp.data.landEmoji}
								fom={topp.data.fom}
								tom={topp.data.tom}
							/>
						</>
					))
				}
			</div>
		</div>

		<div style={{ display: "flex", flexDirection: "row" }}>
			<StatusBar label="Gjennomført" />
			<div>
				{
					gjennomfoerteTopper.map((topp, index) => {
						return (
							<>
								{index !== 0 && <VerticalBar />}
								<LinkCard
									href={`/topper/${topp.slug}`}
									tittel={`${topp.data.rang}. ${topp.data.høyestePunkt}, ${topp.data.land}, ${topp.data.moh} moh`}
									landEmoji={topp.data.landEmoji}
									fom={topp.data.fom}
									tom={topp.data.tom}
								/>
							</>
						);
					})
				}
			</div>
		</div>
	</div>
</Layout>
